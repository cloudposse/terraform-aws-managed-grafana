# Name of this project
name: terraform-aws-managed-grafana

# License of this project
license: "APACHE2"

# Copyrights
copyrights:
  - name: "Cloud Posse, LLC"
    url: "https://cloudposse.com"
    year: "2021"

# Canonical GitHub repo
github_repo: cloudposse/terraform-aws-managed-grafana

# Badges to display
badges:
  - name: Latest Release
    image: https://img.shields.io/github/release/cloudposse/terraform-aws-managed-grafana.svg?style=for-the-badge
    url: https://github.com/cloudposse/terraform-aws-managed-grafana/releases/latest
  - name: Last Updated
    image: https://img.shields.io/github/last-commit/cloudposse/terraform-aws-managed-grafana.svg?style=for-the-badge
    url: https://github.com/cloudposse/terraform-aws-managed-grafana/commits
  - name: Slack Community
    image: https://slack.cloudposse.com/for-the-badge.svg
    url: https://cloudposse.com/slack

# List any related terraform modules that this module may be used with or that this module depends on.
related:
  - name: "terraform-null-label"
    description: "Terraform module designed to generate consistent names and tags for resources. Use terraform-null-label to implement a strict naming convention."
    url: "https://github.com/cloudposse/terraform-null-label"

# List any resources helpful for someone to get started. For example, link to the hashicorp documentation or AWS documentation.
references:
  - name: "Cloud Posse Documentation"
    url: "https://docs.cloudposse.com"
    description: "The Cloud Posse Developer Hub (documentation)"
  - name: "Terraform Standard Module Structure"
    description: "HashiCorp's standard module structure is a file and directory layout we recommend for reusable modules distributed in separate repositories."
    url: "https://www.terraform.io/docs/language/modules/develop/structure.html"
  - name: "Terraform Module Requirements"
    description: "HashiCorp's guidance on all the requirements for publishing a module. Meeting the requirements for publishing a module is extremely easy."
    url: "https://www.terraform.io/docs/registry/modules/publish.html#requirements"
  - name: "Terraform Version Pinning"
    description: "The required_version setting can be used to constrain which versions of the Terraform CLI can be used with your configuration"
    url: "https://www.terraform.io/docs/language/settings/index.html#specifying-a-required-terraform-version"

# Short description of this project
description: |-
  This module is responsible for provisioning an Amazon Managed Grafana workspace.

# Introduction to the project
introduction: |-
  Amazon Managed Grafana is a fully managed service for Grafana, a popular open-source analytics platform that enables you to query, visualize, and alert on your metrics, logs, and traces.

  Deploy this module alongside [terraform-aws-managed-prometheus](https://github.com/cloudposse/terraform-aws-managed-prometheus) to visual metrics or add a Grafana Loki data source to visualize logs.

# How to use this module. Should be an easy example to copy and paste.
usage: |-
  For a complete example, see [examples/complete](examples/complete).

  For automated tests of the complete example using [bats](https://github.com/bats-core/bats-core) and [Terratest](https://github.com/gruntwork-io/terratest)
  (which tests and deploys the example on AWS), see [test](test).

  ```hcl
  locals {
    enabled = module.this.enabled

    # These are pulled from the output of the cloudposse/terraform-aws-managed-prometheus module
    additional_allowed_roles = compact([for prometheus in module.prometheus : prometheus.outputs.access_role_arn])
  }

  module "security_group" {
    source  = "cloudposse/security-group/aws"
    version = "2.2.0"

    enabled = local.enabled && var.private_network_access_enabled

    allow_all_egress = true
    rules            = []
    vpc_id           = module.vpc.outputs.vpc_id

    context = module.this.context
  }

  module "managed_grafana" {
    source  = "cloudposse/managed-grafana/aws"
    # Cloud Posse recommends pinning every module to a specific version
    # version = "x.x.x"

    enabled = local.enabled

    prometheus_policy_enabled = var.prometheus_policy_enabled
    additional_allowed_roles  = local.additional_allowed_roles

    sso_role_associations = [
      {
        "role" = "ADMIN"
        "group_ids" = ["xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"]
      }
    ]

    vpc_configuration = var.private_network_access_enabled ? {
      subnet_ids         = module.vpc.outputs.private_subnet_ids
      security_group_ids = [module.security_group.id]
    } : {}

    context = module.this.context
  }
  ```

# Example usage
examples: |-
  Here is an example of using this module:
  - [`examples/complete`](https://github.com/cloudposse/terraform-aws-managed-grafana/) - complete example of using this module

# Other files to include in this README from the project folder
include: []
contributors: []
